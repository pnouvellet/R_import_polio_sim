n_imp <- c(300,500)
n_rep_inmp <- length(n_imp)
Res_sim <-list()
for (n in 1:n_rep_inmp){
Res_sim[[paste0('imp_',n_imp[n])]] <- list(true_sizes=matrix(NA,n_imp[n],N_rep),
obs_sizes=matrix(NA,n_imp[n],N_rep))
}
for (n in 1:n_rep_inmp){
print(n)
for (k in 1:N_rep){
# print(k)
# Sim_I <- simulate_negbin(R,n_imp[n],s,rho,t_max,overdisp = .5)
Sim_I <- simulate_poisson(R,n_imp[n],s,rho,t_max)
Res_sim[[paste0('imp_',n_imp[n])]]$true_sizes[,k] <- Sim_I$true_size
Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes[,k] <- Sim_I$reported_size
}
}
save.image(file = paste0('sim_polio_R',R,'.RData'))
load('sim_polio_R0.99.RData')
# layout(matrix(1:2,1,2))
for (n in 1:n_rep_inmp){
x <- as.data.frame( Res_sim[[paste0('imp_',n_imp[n])]]$true_sizes)
y <- gather(x)
p1 <- ggplot(y,aes(value, fill = key))+ geom_density(alpha = 0.2,show.legend=FALSE) + xlim(c(0,200))
x <- as.data.frame( Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes)
y <- gather(x)
p2<- ggplot(y,aes(value, fill = key)) +
geom_density(alpha = 0.2,show.legend=FALSE) +
xlim(c(0,10)) +
ggtitle(paste0('E[# outbreaks obs]=',mean(colSums(x>0)),' (',n_imp[n],' importations)'))
grid.arrange(p1,p2,ncol=2)
}
library(tidyr)
library(gridExtra)
for (n in 1:n_rep_inmp){
x <- as.data.frame( Res_sim[[paste0('imp_',n_imp[n])]]$true_sizes)
y <- gather(x)
p1 <- ggplot(y,aes(value, fill = key))+ geom_density(alpha = 0.2,show.legend=FALSE) + xlim(c(0,200))
x <- as.data.frame( Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes)
y <- gather(x)
p2<- ggplot(y,aes(value, fill = key)) +
geom_density(alpha = 0.2,show.legend=FALSE) +
xlim(c(0,10)) +
ggtitle(paste0('E[# outbreaks obs]=',mean(colSums(x>0)),' (',n_imp[n],' importations)'))
grid.arrange(p1,p2,ncol=2)
}
# layout(matrix(1:2,1,2))
for (n in 1:n_rep_inmp){
Y_obs <- Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes
for (k in 1:N_rep){
y_obs <- Y_obs[,k]
y_obs <- y_obs[which(y_obs>0)]
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 20)
R_estimate <- theta_max_likelihood(theta = profile$theta,
likelihood = profile$Likelihood,
threshold_CI = 0.95)
as.numeric(R_estimate[c(1,3,4)])
import <- import(y_obs = y_obs,
rho = rho,
profile = profile,
threshold_z = 1e4,
threshold_import = 5e3,
CI = 0.95)
length(y_obs) + as.numeric(import[c(1,3,4)])
}
}
n_rep_inmp
n=1
k=1
Y_obs <- Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes
y_obs <- Y_obs[,k]
y_obs <- y_obs[which(y_obs>0)]
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 20)
R_estimate <- theta_max_likelihood(theta = profile$theta,
likelihood = profile$Likelihood,
threshold_CI = 0.95)
R_estimate
as.numeric(R_estimate[c(1,3,4)])
import <- import(y_obs = y_obs,
rho = rho,
profile = profile,
threshold_z = 1e4,
threshold_import = 5e3,
CI = 0.95)
length(y_obs) + as.numeric(import[c(1,3,4)])
R=.99
s=1
rho=1/1e3
t_max=1e3
N_rep <- 1e2
n_imp <- c(300,500)
n_rep_inmp <- length(n_imp)
Res_sim <-list()
for (n in 1:n_rep_inmp){
Res_sim[[paste0('imp_',n_imp[n])]] <- list(true_sizes = matrix(NA,n_imp[n],N_rep),
obs_sizes = matrix(NA,n_imp[n],N_rep),
R_simulated = R,
n_importation = n_imp[n],
R_estimated = matrix(NA,3,N_rep),
Imp_estimated = matrix(NA,3,N_rep) )
}
for (n in 1:n_rep_inmp){
print(n)
for (k in 1:N_rep){
# print(k)
# Sim_I <- simulate_negbin(R,n_imp[n],s,rho,t_max,overdisp = .5)
Sim_I <- simulate_poisson(R,n_imp[n],s,rho,t_max)
Res_sim[[paste0('imp_',n_imp[n])]]$true_sizes[,k] <- Sim_I$true_size
Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes[,k] <- Sim_I$reported_size
}
}
save.image(file = paste0('sim_polio_R',R,'.RData'))
load('sim_polio_R0.99.RData')
for (n in 1:n_rep_inmp){
x <- as.data.frame( Res_sim[[paste0('imp_',n_imp[n])]]$true_sizes)
y <- gather(x)
p1 <- ggplot(y,aes(value, fill = key))+ geom_density(alpha = 0.2,show.legend=FALSE) + xlim(c(0,200))
x <- as.data.frame( Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes)
y <- gather(x)
p2<- ggplot(y,aes(value, fill = key)) +
geom_density(alpha = 0.2,show.legend=FALSE) +
xlim(c(0,10)) +
ggtitle(paste0('E[# outbreaks obs]=',mean(colSums(x>0)),' (',n_imp[n],' importations)'))
grid.arrange(p1,p2,ncol=2)
}
n=1
k=1
Y_obs <- Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[,k]
Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[,k]
install.packages('svMisc')
load(svMisc)
library(svMisc)
# layout(matrix(1:2,1,2))
for (n in 1:n_rep_inmp){
print(n)
Y_obs <- Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes
for (k in 1:N_rep){
y_obs <- Y_obs[,k]
y_obs <- y_obs[which(y_obs>0)]
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 20)
R_estimate <- theta_max_likelihood(theta = profile$theta,
likelihood = profile$Likelihood,
threshold_CI = 0.95)
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[,k] <- as.numeric(R_estimate[c(1,3,4)])
import <- import(y_obs = y_obs,
rho = rho,
profile = profile,
threshold_z = 1e4,
threshold_import = 5e3,
CI = 0.95)
Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[,k] <- length(y_obs) + as.numeric(import[c(1,3,4)])
progress(k)
}
}
n
k
max(Res_sim[[paste0('imp_',n_imp[n])]]$true_sizes)
y_obs <- Y_obs[,k]
y_obs <- y_obs[which(y_obs>0)]
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 20)
R_estimate <- theta_max_likelihood(theta = profile$theta,
likelihood = profile$Likelihood,
threshold_CI = 0.95)
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[,k] <- as.numeric(R_estimate[c(1,3,4)])
import <- import(y_obs = y_obs,
rho = rho,
profile = profile,
threshold_z = 1e4,
threshold_import = 5e2,
CI = 0.95)
Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[,k] <- length(y_obs) + as.numeric(import[c(1,3,4)])
1e3/60
import <- import(y_obs = y_obs,
rho = rho,
profile = profile,
threshold_z = 1e4,
threshold_import = 1e3,
CI = 0.95)
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 20)
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 1.5)
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 1.5)
import <- import(y_obs = y_obs,
rho = rho,
profile = profile,
threshold_z = 1e4,
threshold_import = 1e3,
CI = 0.95)
# layout(matrix(1:2,1,2))
for (n in 1:n_rep_inmp){
print(n)
Y_obs <- Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes
for (k in 1:N_rep){
y_obs <- Y_obs[,k]
y_obs <- y_obs[which(y_obs>0)]
profile <- profile_likelihood(y_obs = y_obs,
rho = rho,
accuracy = 0.01,
max_R = 1.5)
R_estimate <- theta_max_likelihood(theta = profile$theta,
likelihood = profile$Likelihood,
threshold_CI = 0.95)
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[,k] <- as.numeric(R_estimate[c(1,3,4)])
import <- import(y_obs = y_obs,
rho = rho,
profile = profile,
threshold_z = 1e4,
threshold_import = 1e3,
CI = 0.95)
Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[,k] <- length(y_obs) + as.numeric(import[c(1,3,4)])
progress(k)
}
}
save.image(file = paste0('Res_sim_polio_R',R,'.RData'))
n=1
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[1,]
hist( Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[1,] )
layout(matrix(1:2,1,2))
for (n in 1:n_rep_inmp){
hist( Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[1,] )
hist( Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[1,] )
# print(n)
# Y_obs <- Res_sim[[paste0('imp_',n_imp[n])]]$obs_sizes
# for (k in 1:N_rep){
#
#   y_obs <- Y_obs[,k]
#   y_obs <- y_obs[which(y_obs>0)]
#   profile <- profile_likelihood(y_obs = y_obs,
#                                 rho = rho,
#                                 accuracy = 0.01,
#                                 max_R = 1.5)
#
#   R_estimate <- theta_max_likelihood(theta = profile$theta,
#                                      likelihood = profile$Likelihood,
#                                      threshold_CI = 0.95)
#
#   Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[,k] <- as.numeric(R_estimate[c(1,3,4)])
#
#   import <- import(y_obs = y_obs,
#                    rho = rho,
#                    profile = profile,
#                    threshold_z = 1e4,
#                    threshold_import = 1e3,
#                    CI = 0.95)
#   Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[,k] <- length(y_obs) + as.numeric(import[c(1,3,4)])
#
#   progress(k)
# }
}
R
summary <- data.frame(sim_R = rep(NA,n_imp),
sim_imp = rep(NA,n_imp),
est_R = matrix(NA,3,n_imp),
est_imp = matrix(NA,3,n_imp),
est_R_within = rep(NA,n_imp),
est_imp_within = rep(NA,n_imp),
est_R_bias = matrix(NA,3,n_imp),
est_imp_bias = matrix(NA,3,n_imp))
n_imp
n_rep_inmp
summary <- data.frame(sim_R = rep(NA,n_rep_inmp),
sim_imp = rep(NA,n_rep_inmp),
est_R = matrix(NA,3,n_rep_inmp),
est_imp = matrix(NA,3,n_rep_inmp),
est_R_within = rep(NA,n_rep_inmp),
est_imp_within = rep(NA,n_rep_inmp),
est_R_bias = matrix(NA,3,n_rep_inmp),
est_imp_bias = matrix(NA,3,n_rep_inmp))
summary <- data.frame(sim_R = rep(NA,n_rep_inmp),
sim_imp = rep(NA,n_rep_inmp),
est_R = matrix(NA,3,n_rep_inmp),
est_imp = matrix(NA,3,n_rep_inmp),
est_R_within = rep(NA,n_rep_inmp),
est_imp_within = rep(NA,n_rep_inmp),
est_R_bias = matrix(NA,3,n_rep_inmp),
est_imp_bias = matrix(NA,3,n_rep_inmp))
summary <- list(sim_R = rep(NA,n_rep_inmp),
sim_imp = rep(NA,n_rep_inmp),
est_R = matrix(NA,3,n_rep_inmp),
est_imp = matrix(NA,3,n_rep_inmp),
est_R_within = rep(NA,n_rep_inmp),
est_imp_within = rep(NA,n_rep_inmp),
est_R_bias = matrix(NA,3,n_rep_inmp),
est_imp_bias = matrix(NA,3,n_rep_inmp))
n=1
x <- Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[1,]
y <- Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[1,]
summary$sim_R[n] <- Res_sim[[paste0('imp_',n_imp[n])]]$R_simulated
summary$sim_imp[n] <- Res_sim[[paste0('imp_',n_imp[n])]]$n_importation
quantile(x,c(0.5,.025,.975))
which(Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,] > summary$sim_R[n])
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,]
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[3,]
which(Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,] < summary$sim_R[n])
which(Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,] < summary$sim_R[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[3,] > summary$sim_R[n])
length(which(Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,] < summary$sim_R[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[3,] > summary$sim_R[n])) / N_rep
length(which(Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,] <= summary$sim_R[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[3,] >= summary$sim_R[n])) / N_rep
temp <- length(which(Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[2,] <= summary$sim_imp[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[3,] >= summary$sim_imp[n])) / N_rep
temp
summary <- list(sim_R = rep(NA,n_rep_inmp),
sim_imp = rep(NA,n_rep_inmp),
est_R = matrix(NA,3,n_rep_inmp),
est_imp = matrix(NA,3,n_rep_inmp),
est_R_within = rep(NA,n_rep_inmp),
est_imp_within = rep(NA,n_rep_inmp),
est_R_bias = matrix(NA,3,n_rep_inmp),
est_imp_bias = matrix(NA,3,n_rep_inmp))
layout(matrix(1:2,1,2))
for (n in 1:n_rep_inmp){
x <- Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[1,]
y <- Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[1,]
summary$sim_R[n] <- Res_sim[[paste0('imp_',n_imp[n])]]$R_simulated
summary$sim_imp[n] <- Res_sim[[paste0('imp_',n_imp[n])]]$n_importation
summary$est_R[,n] <- quantile(x,c(0.5,.025,.975))
summary$est_imp[,n] <- quantile(y,c(0.5,.025,.975))
summary$est_R_bias[,n] <- quantile( summary$sim_R[n] - x ,c(0.5,.025,.975))
summary$est_imp[,n] <- quantile( summary$sim_imp[n] - y ,c(0.5,.025,.975))
temp <- length(which(Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,] <= summary$sim_R[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[3,] >= summary$sim_R[n])) / N_rep
summary$est_R_within[n] <- temp
temp <- length(which(Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[2,] <= summary$sim_imp[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[3,] >= summary$sim_imp[n])) / N_rep
summary$est_imp_within[n] <- temp
}
library(Hmisc)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
lines(1:n_rep_inmp,summary$sim_R,lty='n',pch=16)
1:n_rep_inmp
summary$est_R[1,]
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
1:n_rep_inmp
summary$sim_R
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
lines(1:n_rep_inmp,summary$sim_R,lty='n',pch=16)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
lines(1:n_rep_inmp,summary$sim_R, pch=16)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
lines(1:n_rep_inmp,summary$sim_R, lty = 'p', pch=16)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=16)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
# lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=16)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red')
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,])
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(0,1.5))
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.5))
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1))
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red', cex =2)
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),xlab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(.5,1.1),xlab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=5, col = 'red', cex =2)
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),xlab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), xlab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=5, col = 'red', cex =2)
summary$est_imp
n=1
x <- Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[1,]
y <- Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[1,]
y
quantile(y,c(0.5,.025,.975))
summary <- list(sim_R = rep(NA,n_rep_inmp),
sim_imp = rep(NA,n_rep_inmp),
est_R = matrix(NA,3,n_rep_inmp),
est_imp = matrix(NA,3,n_rep_inmp),
est_R_within = rep(NA,n_rep_inmp),
est_imp_within = rep(NA,n_rep_inmp),
est_R_bias = matrix(NA,3,n_rep_inmp),
est_imp_bias = matrix(NA,3,n_rep_inmp))
layout(matrix(1:2,1,2))
for (n in 1:n_rep_inmp){
x <- Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[1,]
y <- Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[1,]
summary$sim_R[n] <- Res_sim[[paste0('imp_',n_imp[n])]]$R_simulated
summary$sim_imp[n] <- Res_sim[[paste0('imp_',n_imp[n])]]$n_importation
summary$est_R[,n] <- quantile(x,c(0.5,.025,.975))
summary$est_imp[,n] <- quantile(y,c(0.5,.025,.975))
summary$est_R_bias[,n] <- quantile( summary$sim_R[n] - x ,c(0.5,.025,.975))
summary$est_imp_bias[,n] <- quantile( summary$sim_imp[n] - y ,c(0.5,.025,.975))
temp <- length(which(Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[2,] <= summary$sim_R[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$R_estimated[3,] >= summary$sim_R[n])) / N_rep
summary$est_R_within[n] <- temp
temp <- length(which(Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[2,] <= summary$sim_imp[n] &
Res_sim[[paste0('imp_',n_imp[n])]]$Imp_estimated[3,] >= summary$sim_imp[n])) / N_rep
summary$est_imp_within[n] <- temp
}
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),xlab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=5, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), xlab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=5, col = 'red', cex =2)
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),xlab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), xlab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =2)
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),xlab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), xlab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1)
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),xlab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), xlab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),xlab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), xlab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:2,1,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),ylab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), ylab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:2,2,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),ylab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), ylab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:4,2,2))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),ylab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), ylab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:4,2,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),ylab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), ylab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),ylab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), ylab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),ylab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), ylab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R[1,],summary$est_R[2,],summary$est_R[3,], ylim = c(.5,1.1),ylab = 'R')
lines(1:n_rep_inmp,summary$sim_R, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp[1,],summary$est_imp[2,],summary$est_imp[3,], ylim = c(0,1e3), ylab = 'Importations')
lines(1:n_rep_inmp,summary$sim_imp, type = 'p', pch=4, col = 'red', cex =1, lwd = 2)
print('#################################################################################')
print(paste0('### percentage of R estimates with 95%CI within true value: ' ,summary$est_R_within))
print('#################################################################################')
print(paste0('### percentage of importations estimates with 95%CI within true value: ' ,summary$est_imp_within))
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R_bias[1,],summary$est_R_bias[2,],summary$est_R_bias[3,], ylim = c(-0.5,0.5),ylab = 'R bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp_bias[1,],summary$est_imp_bias[2,],summary$est_imp_bias[3,], ylim =  c(-0.5,0.5)*10, ylab = 'Importations bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R_bias[1,],summary$est_R_bias[2,],summary$est_R_bias[3,], ylim = c(-0.1,0.1),ylab = 'R bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp_bias[1,],summary$est_imp_bias[2,],summary$est_imp_bias[3,], ylim =  c(-0.5,0.5)*10, ylab = 'Importations bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R_bias[1,],summary$est_R_bias[2,],summary$est_R_bias[3,], ylim = c(-0.1,0.1),ylab = 'R bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp_bias[1,],summary$est_imp_bias[2,],summary$est_imp_bias[3,], ylim =  c(-0.5,0.5)*100, ylab = 'Importations bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R_bias[1,],summary$est_R_bias[2,],summary$est_R_bias[3,], ylim = c(-0.1,0.1),ylab = 'R bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp_bias[1,],summary$est_imp_bias[2,],summary$est_imp_bias[3,], ylim =  c(-100,100), ylab = 'Importations bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R_bias[1,],summary$est_R_bias[2,],summary$est_R_bias[3,], ylim = c(-0.1,0.1),ylab = 'R bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp_bias[1,],summary$est_imp_bias[2,],summary$est_imp_bias[3,], ylim =  c(-200,200), ylab = 'Importations bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
layout( matrix(1:2,1,2, byrow = TRUE))
errbar(1:n_rep_inmp,summary$est_R_bias[1,],summary$est_R_bias[2,],summary$est_R_bias[3,], ylim = c(-0.1,0.1),ylab = 'R bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
errbar(1:n_rep_inmp,summary$est_imp_bias[1,],summary$est_imp_bias[2,],summary$est_imp_bias[3,], ylim =  c(-300,300), ylab = 'Importations bias')
lines(1:n_rep_inmp,c(0,0), type = 'l', col = 'red', lwd = 2)
